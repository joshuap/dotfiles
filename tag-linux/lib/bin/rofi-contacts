#!/usr/bin/env bash

CARDS=~/.contacts/card/*.vcf

cards=$(cat $CARDS | jc | jq "map(select(has(\"FN\"))) | map(select(.FN[].Value | contains(\"$@\")))")

function card_select() {
  index=$(echo $cards | jq -r ".[].FN[0].Value" | rofi -dmenu -p name -i -markup-rows -format i)

  if [ -z "$index" ]; then
    exit
  fi

  card=$(echo $cards | jq ".[$index]")

  function print_label() {
    echo "${1}"
  }

  function print_each() {
    if [ -z "${1}" ] || [ "${1}" = "null" ]; then
      return
    fi

    format_func="${2}"
    if [ -z "$format_func" ]; then
      format_func="awk {print}"
    fi

    for row in $(echo "${1}" | jq -r '.[] | @base64'); do
      _jq() {
        echo ${row} | base64 --decode | jq -r "${1}"
      }

      label=$(print_label "$(_jq '.Params.TYPE | join(", ")' | awk '{print tolower($0)}')")
      value=$(_jq '.Value' | $format_func)

      printf "<b>%s:</b> %s\n" "$label" "$value"
    done
  }

  function format_address() {
    awk -F\; '{ printf "%s %s %s %s, %s %s\n", $1, $2, $3, $4, $5, $6 }' | sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
  }

  function print_card() {
    print_each "$(echo $card | jq -r '.EMAIL')"
    print_each "$(echo $card | jq -r '.TEL')"
    print_each "$(echo $card | jq -r '.ADR')" "format_address"
  }

  function copy() {
    xsel --clipboard --input
  }

  value=$(print_card | rofi -dmenu -p "$(echo $card | jq -r '.FN[0].Value')" -i -markup-rows -format s)

  if [ -z "$value" ]; then
    card_select
  fi

  echo "$value" | sed -e 's/^.*<\/b> //' | tr -d "\n" | copy
}

card_select
